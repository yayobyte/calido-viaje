.searchForm {
  display: flex;
  flex-direction: column;
  gap: var(--space-md);
}

.formRow {
  display: flex;
  gap: var(--space-md);
}

.formGroup {
  flex: 1;
  position: relative;
}

.label {
  display: block;
  margin-bottom: var(--space-xs);
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--color-gray-700);
  transition: color 0.3s;
}

.input,
.select {
  width: 100%;
  padding: var(--space-sm) var(--space-md);
  border: 2px solid var(--color-gray-300);
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s;
  background: var(--color-white);
}

.input:focus,
.select:focus {
  border-color: var(--color-primary);
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.formGroup:focus-within .label {
  color: var(--color-primary);
}

.autocompleteContainer {
  position: relative;
  width: 100%;
}

.autocompleteResults {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  max-height: 300px;
  overflow-y: auto;
  background-color: var(--color-white);
  border: 1px solid var(--color-gray-300);
  border-radius: 0 0 8px 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  z-index: 100;
  padding: 0;
  margin: 0;
  list-style-type: none;
  animation: slideDown 0.2s ease-out;
}

.autocompleteItem {
  padding: var(--space-sm) var(--space-md);
  cursor: pointer;
  border-bottom: 1px solid var(--color-gray-200);
  display: flex;
  flex-direction: column;
  gap: 2px;
  transition: all 0.2s;
}

.autocompleteItem:last-child {
  border-bottom: none;
}

.autocompleteItem:hover {
  background-color: var(--color-gray-100);
  transform: translateX(5px);
}

.airportCode {
  font-weight: bold;
  color: var(--color-primary);
  font-size: 1rem;
}

.airportName {
  font-size: 0.9rem;
  color: var(--color-gray-800);
}

.airportCity {
  font-size: 0.8rem;
  color: var(--color-gray-600);
}

.searchButton {
  margin-top: var(--space-md);
  padding: var(--space-md);
  background-color: var(--color-primary);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.searchButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.7s;
  z-index: -1;
}

.searchButton:hover {
  background-color: var(--color-primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.searchButton:hover::before {
  left: 100%;
}

.searchButton:active {
  transform: translateY(0);
}

.searchButton:disabled {
  background-color: var(--color-gray-400);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.searchButton:disabled::before {
  display: none;
}

/* Loading state animations */
.searchButton.loading {
  display: flex;
  justify-content: center;
  align-items: center;
}

.searchButton.loading::after {
  content: '';
  width: 20px;
  height: 20px;
  border: 2px solid var(--color-white);
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 0.8s linear infinite;
  margin-left: var(--space-sm);
}

.inputWrapper {
  position: relative;
  width: 100%;
}

.spinner {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
}

.spinnerIcon {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-top: 2px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.inputLoading {
  padding-right: 35px; /* Make room for spinner */
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .formRow {
    flex-direction: column;
    gap: var(--space-sm);
  }
  
  .searchButton {
    padding: var(--space-sm);
  }
}